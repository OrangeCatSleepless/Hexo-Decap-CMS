#---------------------------
# Hexo Fluid
# Author: Fluid-dev organization
# Github: https://github.com/fluid-dev/hexo-theme-fluid
#
# Docs：https://hexo.fluid-dev.com/docs/guide/
#---------------------------


#---------------------------
# 全局
# Site
#---------------------------
favicon: /img/favicon.png # 网站标签页的 icon

apple_touch_icon: /img/favicon.png # 用于苹果设备的 icon

title_join_string: ' - '  # 浏览器标签页中的标题分隔符，效果： 文章名 - 站点名

force_https: false  # 强制所有链接升级为 HTTPS（适用于图片等资源出现 HTTP 混入报错）

highlight: # 代码高亮
  enable: true
  style: 'Github Gist'  # 高亮样式见：https://highlightjs.org/static/demo/  在页面挑选 style 填入
  bg_color: false  # 是否根据 style 改变代码背景色，**如果 style 是深色背景别忘了开启此项**
  copy_btn: true  # 是否开启复制代码的按钮

fun_features: # 一些好玩的功能
  typing: # 为 subtitle 添加打字机效果
    enable: true
    typeSpeed: 70  # 打印速度，数字越大越慢
    cursorChar: "_" # 游标字符
    loop: false # 是否循环播放效果
  anchorjs: # 为文章内容中的标题添加锚图标
    enable: true
    element: h1,h2,h3,h4,h5,h6
    placement: right # icon放置的位置： left | right
    visible: hover # 默认悬浮显示，可选：hover（鼠标在元素上悬浮时显示） | always（一直显示） | touch（移动端触摸显示）
    icon: "" # 可选：§ | # | ❡ 等，留空则为默认效果
  mouse_click:  # 鼠标点击动效
    enable: false
    style: values # 目前设置两个值：values（价值观词汇） | love（爱心）

color:  # 主题颜色配置，不一定能每一处都生效，可能会被局部样式覆盖，这种情况建议用自定义 css 解决。配色可以在这获得启发： https://www.webdesignrankings.com/resources/lolcolors/
  body_bg_color: "#eee"             # body 背景色
  navbar_bg_color: "#2f4154"        # 顶部菜单背景色
  navbar_text_color: "white"        # 顶部菜单字体色
  text_color: "#3c4858"             # 全局字体色
  sec_text_color: "#718096"         # 全局次级字体色（摘要、简介等位置）
  post_text_color: "#2c3e50"        # 文章正文字体色
  post_heading_color: "#1a202c"     # 文章标题标签字体色（h1 h2 h3...）
  link_color: "#3c4858"             # 超链接字体色
  link_hover_color: "#1abc9c"       # 超链接悬浮时字体色
  link_hover_bg_color: "#f8f9fa"    # 超链接悬浮背景色
  board_color: "#fff"               # 主面板背景色

font:  # 主题字体配置
  font_size: 16px                   # 全局字号
  font_family:                      # 全局字体
  code_font_size: 85%               # 代码的字号

custom_js:   # 指定自定义 js 文件路径，路径是相对 source 目录，如 /js/custom.js 对应存放目录 source/js/custom.js，支持列表
custom_css:   # 指定自定义 css 文件路径，路径是相对 source 目录，如 /css/custom.css 同上，支持列表
custom_html: ''  # 自定义底部 HTML 内容（位于 footer 上方），也可用于外部引入 js css 这些操作，注意不要和 post.custom 配置冲突

web_analytics:  # 网页访问统计
  enable: false
  baidu:  # 百度统计的Key，参见 https://tongji.baidu.com/sc-web/10000033910/home/site/getjs?siteId=13751376 代码获取中 hm.js? 后边的字符串
  google:  # Google统计的Tracking ID，参见 https://analytics.google.com/analytics/web/
  tencent:  # 腾讯统计的H5 App id，参见 https://mta.qq.com/h5/manage/ctr_app_manage (开启高级功能才有cid)
    sid:
    cid:
  tajs:   # 腾讯统计早期版站点统计sID，参见 https://ta.qq.com/#/site/list
  woyaola:  # 51.la站点统计ID，参见 https://www.51.la/user/site/index
  cnzz:  # 友盟/cnzz站点统计web_id，参见 https://web.umeng.com/main.php?c=site&a=show
  leancloud:  # LeanCloud 计数统计，可用于 PV UV 展示，如果 web_analytics.enable 没有开启，PV UV 展示只会查询，不会增加
    app_id:
    app_key:
    server_url:  # REST API 服务器地址，国际版不填

lazyload: # 对页面中的图片进行懒加载处理，可见范围外的图片不会加载
  enable: true
  onlypost: false  # 仅在文章页使用懒加载，开启后如果自定义页面需要使用，可以在 Front-matter 里指定 `lazyload: true`

daovoice:  # 在线客服 Daovoice 参考：http://dashboard.daovoice.io
  enable: false # 是否开启在线客服聊天
  appid: ''  # 应用ID设置

aplayer:  # 音乐播放器，注意不能与 hexo-tag-aplayer 插件共用
  enable: false
  autoplay: false  # 音频自动播放
  loop: 'all'  # 音频循环播放, 可选值: 'all', 'one', 'none'
  order: 'random'  # 播放顺序，可选值: 'list', 'random'
  theme: '#b7daff'  # 主题色
  songs:  # 歌曲列表，必须传入下列各参数，其中 url 与 cover 在本地需存于 source 目录，更多参数见文档：https://aplayer.js.org/#/zh-Hans/?id=%E5%8F%82%E6%95%B0
    - { name: 'name', artist: 'artist', url: '/songs/test.mp3', cover: '/img/cover.jpg' }
    - { name: 'name', artist: 'artist', url: 'https://...url.mp3', cover: 'https://...cover.jpg' }

version:  # 主题版本相关
  check: false  # 每次生成页面后，检测主题是否为最新版本

#---------------------------
# 页头
# Header
#---------------------------
navbar:
  blog_title: Fluid # 导航栏左侧的标题，为空则按 hexo config.title 显示
  ground_glass:  # 导航栏毛玻璃特效，实验性功能，可能会造成页面滚动掉帧和抖动，部分浏览器不支持会自动不生效
    enable: false
    px: 3  # 模糊像素，只能为数字，数字越大模糊度越高
    alpha: 0.7   # 透明度，只能为数字，范围0~1，数字越大透明度越低，注意透明过度可能看不清菜单字体
  menu:  # 可自行增减，key 用来关联 languages/*.yml，如不存在关联则显示 key 本身的值；icon 是 css class，可以省略；增加 name 可以强制显示指定名称
    - { key: 'home', link: '/', icon: 'iconfont icon-home-fill' }
    - { key: 'archive', link: '/archives/', icon: 'iconfont icon-archive-fill' }
    - { key: 'category', link: '/categories/', icon: 'iconfont icon-category-fill' }
    - { key: 'tag', link: '/tags/', icon: 'iconfont icon-tags-fill' }
    - { key: 'about', link: '/about/', icon: 'iconfont icon-user-fill' }
    #- { key: 'links', link: '/links/', icon: 'iconfont icon-link-fill' }  # 友链页，把前面#去掉即可展示

search: # 搜索栏，基于 hexo-generator-search 插件，若已安装其他搜索插件请关闭此功能，以避免生成多余的索引文件。
  enable: true
  path: /local-search.xml # 文件引用地址，默认是下方生成位置，也可以将生成后的 local-search.xml 上传到其它位置引用，如：https://www.example.com/local-search.xml
  generate_path: /local-search.xml # 文件生成位置，必须为相对位置
  field: post
  content: true

scroll_down_arrow:  # 向下滚动的箭头
  enable: true
  banner_height_limit: 90  # 头图高度不小于指定比例，才显示箭头
  scroll_after_turning_page: true  # 翻页后自动滚动

banner_parallax: true  # 头图滚动视差


#---------------------------
# 页脚
# Footer
#---------------------------
footer:
  statistics:  # 展示网站的 PV、UV 统计数
    enable: false
    source: "busuanzi"  # 统计数据来源，可选：busuanzi | leancloud，使用 leancloud 需要在 web_analytics 中设置 api 参数，使用 busuanzi 注意可能间歇抽风
    pv_format: "总访问量 {} 次"  # 显示的文本，{}是数字的占位符（必须包含)，下同
    uv_format: "总访客数 {} 人"

  beian:  # The footer of China's website policy, other areas keep disable
    enable: false
    icp_text: 京ICP证123456号 # ICP证号
    police_text: 京公网安备12345678号 # 公安备案号，不填则只显示ICP
    police_code: 12345678 # 公安备案的编号，用于URL跳转查询
    police_icon: /img/police_beian.png # 公安备案的图片. 为空时不显示备案图片

scroll_top_arrow:  # 向顶部滚动的箭头
  enable: true

#---------------------------
# 首页
# Index Page
#---------------------------
index:
  banner_img: /img/default.png  # 首页 Banner 头图，以下相同
  banner_img_height: 100  # 头图高度，屏幕百分比，available: 0 - 100
  banner_mask_alpha: 0.3  # 头图黑色蒙版的透明度，available: 0 - 1.0， 0 是完全透明（无蒙版），1 是完全不透明
  post_default_img: '' # 默认的文章封面图，当没有指定 index_img 时会使用该图片，若都为空则不显示任何图片
  slogan:  # 首页副标题的独立设置
    enable: true  # 为 false 则不显示任何内容
    text: 'An elegant Material-Design theme for Hexo'  # 为空则按 hexo config.subtitle 显示
  auto_excerpt:
    enable: true
  post_url_target: _self  # available: _blank | _self
  post_meta: # 是否显示文章信息（时间、分类、标签）
    date: true
    category: true
    tag: true

# 通过 hexo new page 命令创建的页面
# Custom Page
page:
  banner_img: /img/default.png
  banner_img_height: 60  # available: 0 - 100
  banner_mask_alpha: 0.3  # available: 0 - 1.0

#---------------------------
# 文章页
# Post Page
#---------------------------
post:  # 部分配置同时控制自定义页面，注意备注
  banner_img: /img/default.png
  banner_img_height: 70  # available: 0 - 100
  banner_mask_alpha: 0.3  # available: 0 - 1.0
  meta:  # 文章标题下方的信息
    date:  # 文章日期
      enable: true
      format: "LL a"  # 格式参照 ISO-8601 日期格式化，可参照 http://momentjs.cn/docs/#/parsing/string-format/
    wordcount:  # 字数统计
      enable: true
      format: "{} 字"  # 显示的文本，{}是数字的占位符（必须包含)，下同
    min2read:  # 阅读时间
      enable: true
      format: "{} 分钟"
      words: 100  # 每分钟阅读多少字，如果是技术文章，建议降低
    views:  # 阅读次数
      enable: false
      source: "busuanzi"  # 统计数据来源，可选：busuanzi | leancloud，使用 leancloud 需要在 web_analytics 中设置 api 参数，使用 busuanzi 注意可能间歇抽风
      format: "{} 次"
  updated:  # 在文章开头显示文章更新时间，该时间默认是 md 文件更新时间，可通过 front-matter 中 `updated` 手动指定（和 date 一样格式）
    enable: false
    content: 本文最后更新于：  # 描述文字
    relative: false  # 是否使用相对时间表示，比如："3 天前"
  toc:  # 文章右侧目录
    enable: true
    headingSelector: h1,h2,h3,h4,h5,h6
    collapseDepth: 0  # 层级的折叠深度，0 是全部折叠，6 是全部不折叠
  copyright:  # 版权声明
    enable: true
    content: '本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh" rel="nofollow noopener">CC BY-SA 4.0 协议</a> ，转载请注明出处！'
  prev_next:  # 文章底部上一篇下一篇功能
    enable: true
  custom:  # 文章底部自定义内容
    enable: false
    content: '<img src="https://octodex.github.com/images/jetpacktocat.png" class="rounded mx-auto d-block mt-5" style="width:150px; height:150px;">' # 自定义区域，支持 HTML，可自行插入赞赏码、公众号二维码等内容
  image_zoom:  # 文章图片可点击放大
    enable: true  # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `image_zoom: true`，并且图片使用该格式插入：<img src="..." zoom />
  footnote:  # 脚注语法，会在文章底部生成脚注，如果 Markdown 渲染器本身支持，则建议关闭，否则可能会冲突
    enable: true
    header: ''  # 脚注的节标题，也可以在 front-matter 中通过 `footnote: <h2>Reference</h2>` 这种形式修改单页的节标题
  math:  # 数学公式，开启之前需要更换 Markdown 渲染器，否则复杂公式会有兼容问题，具体请见：https://hexo.fluid-dev.com/docs/guide/##latex-数学公式
    enable: false  # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `math: true`
    specific: false  # 开启后，只有在文章 Front-matter 里指定 `math: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度
    engine: mathjax  # 公式引擎  available: mathjax | katex
  mermaid:  # 流程图，基于 mermaid-js，文档：http://mermaid-js.github.io/mermaid/
    enable: false  # 开启后文章默认可用，自定义页面如需使用，需在 Front-matter 中指定 `mermaid: true`
    specific: false  # 开启后，只有在文章 Front-matter 里指定 `mermaid: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度
    options: { theme: 'default' }  # 接口选项，具体可见：http://mermaid-js.github.io/mermaid/#/mermaidAPI
  comments:  # 评论
    enable: false  # 开启评论
    type: disqus  # 指定使用的评论模块  available: disqus | valine | gitalk | utterances | changyan | livere  推荐 utterances


#---------------------------
# 评论
# Comments
#---------------------------

# 开启评论需要先在上方 post.comments.enable: true

# utterances
# You can install utterances with https://utteranc.es/ and generate your configuration
utterances:
  repo:
  issue_term:
  label: utterances
  theme: github-light
  crossorigin: anonymous

# Disqus
# 国内用户不要用，已被墙
disqus:
  shortname: # your shortname
  # The following are Disqusjs configurations, please ignore if DisqusJS is not required
  # 以下为 Disqusjs 支持, 如不需要 DisqusJS 请忽略
  # https://github.com/SukkaW/DisqusJS
  disqusjs: false # 设置为 true 开启 DisqusJS
  apikey: # DisqusJS 向 API 发起请求时使用的 API Key

# Gitalk
# You can get yout ClientID and ClientSecret from https://github.com/settings/applications/new
# More info available at https://github.com/gitalk/gitalk#options
gitalk:
  clientID:                     # GitHub Application Client ID
  clientSecret:                 # GitHub Application Client Secret
  repo:                         # The repo to store comments
  owner:                        # GitHub repository owner. Can be personal user or organization.
  admin:                        # GitHub repo owner and collaborators, only these guys can initialize github issues, should be like "['admin']" or "['admin1','admin2']"
  id: location.pathname         # The unique id of the page. Length must less than 50.
  language: zh-CN               # Localization language key, en, zh-CN and zh-TW are currently available.
  labels: "['Gitalk']"          # GitHub issue labels.
  perPage: 15                   # Pagination size, with maximum 100.
  pagerDirection: last          # Comment sorting direction, available values are last and first.
  distractionFreeMode: false    # Facebook-like distraction free mode.
  createIssueManually: true     # By default, Gitalk will create a corresponding github issue for your every single page automatically when the logined user is belong to the admin users. You can create it manually by setting this option to true.

# Valine
# 完整文档 https://valine.js.org/configuration.html
# 注意：下列配置项中的 true/false 不要用引号括起来
valine:
  appid:  # 从 LeanCloud 的应用中得到的 appId
  appkey:  # 从 LeanCloud 的应用中得到的 APP Key
  placeholder: 说点什么 # 评论框占位提示符
  path: window.location.pathname # 当前文章页路径，用于区分不同的文章页，以保证正确读取该文章页下的评论列表
  avatar: retro # Gravatar 头像展示方式
  meta: ['nick', 'mail', 'link']  # 评论者相关属性
  pageSize: 10 # 评论列表分页，每页条数
  lang: zh-CN # zh-CN | zh-TW | en | ja
  highlight: false # 代码高亮
  recordIP: false # 是否记录评论者IP
  serverURLs:  # REST API 服务器地址，国际版不填

# 畅言
# http://changyan.kuaizhan.com/
changyan:
  appid: ''
  appkey: ''

# Livere 来必力
# You can get your uid from https://www.livere.com/my_Livere
livere:
  uid: ''


#---------------------------
# 归档页
# Archive Page
#---------------------------
archive:
  banner_img: /img/default.png
  banner_img_height: 60  # available: 0 - 100
  banner_mask_alpha: 0.3  # available: 0 - 1.0
  subtitle:  # 打字机内容

#---------------------------
# 分类归档页
# Categories Page
#---------------------------
category:
  banner_img: /img/default.png
  banner_img_height: 60  # available: 0 - 100
  banner_mask_alpha: 0.3  # available: 0 - 1.0
  subtitle:  # 打字机内容
  post_limit: 10  # 单个分类中折叠展示文章数的最大值，超过限制会显示 More
  order_by: '-length'  # 排序字段，前面带减号是倒序，不带减号是正序，可选项：name | length

#---------------------------
# 标签归档页
# Tags Page
#---------------------------
tag:
  banner_img: /img/default.png
  banner_img_height: 80  # available: 0 - 100
  banner_mask_alpha: 0.3  # available: 0 - 1.0
  subtitle:  # 打字机内容
  tagcloud: # 标签云
    min_font: 15
    max_font: 30
    unit: px  # 字号单位
    start_color: "#BBBBEE"
    end_color: "#337ab7"


#---------------------------
# 关于页
# About Page
#---------------------------
about:  # 关于页需要手动创建，具体请见：https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E9%A1%B5
  banner_img: /img/default.png
  banner_img_height: 60  # available: 0 - 100
  banner_mask_alpha: 0.3  # available: 0 - 1.0
  subtitle:  # 打字机内容
  avatar: /img/avatar.png # 头像
  name: myname
  introduce: '一句简短的介绍' # 支持 HTML
  icons: # 更多图标可从 https://hexo.fluid-dev.com/docs/icon/ 查找，class 代表图标的 css class
    - { class: 'iconfont icon-github-fill', link: 'https://github.com', tip: 'GitHub' }
    - { class: 'iconfont icon-douban-fill', link: 'https://douban.com', tip: '豆瓣' }
    - { class: 'iconfont icon-wechat-fill', qrcode: '/img/favicon.png' }  # 添加 qrcode 后，点击不再跳转，而是悬浮二维码，需要指定 image


#---------------------------
# 404页
# 404 Page
#---------------------------
page404:
  banner_img: /img/default.png
  banner_img_height: 85  # available: 0 - 100
  banner_mask_alpha: 0.3  # available: 0 - 1.0
  subtitle: 'Page not found'  # 打字机内容


#---------------------------
# 友链页
# Links Page
#---------------------------
links:
  banner_img: /img/default.png
  banner_img_height: 60  # available: 0 - 100
  banner_mask_alpha: 0.3  # available: 0 - 1.0
  subtitle:  # 打字机内容
  items:  # intro 与 image 可省略
    - {
      title: 'Fluid Docs',
      intro: '主题使用指南',
      link: 'https://hexo.fluid-dev.com/docs/',
      image: '/img/favicon.png'
    }
    - {
      title: 'Fluid Repo',
      intro: '主题 GitHub 仓库',
      link: 'https://github.com/fluid-dev/hexo-theme-fluid',
      image: '/img/favicon.png'
    }
    - {
      title: 'Fluid Example',
      intro: '主题操作示例',
      link: 'https://hexo.fluid-dev.com/docs/example/',
      image: '/img/favicon.png'
    }
